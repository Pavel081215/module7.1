2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f736069
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2fb3536e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7205765b
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@434a63ab
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@434a63ab
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a44431a
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a44431a
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4803b726
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4803b726
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e11f9e9
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32502377
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@21282ed8
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21282ed8
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@67f639d3
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67f639d3
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@51e69659
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51e69659
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b11171f
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d9345cd
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6bd61f98
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bd61f98
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7d4f9aae
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d4f9aae
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@273e7444
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@273e7444
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@771a660
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@771a660
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@130c12b7
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25641d39
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e350b40
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@13e344d
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@46cdf8bd
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46cdf8bd
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26d9b808
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2cf3d63b
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cf3d63b
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@202b0582
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@202b0582
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58cbafc2
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74d1dc36
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@75437611
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75437611
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17f9d882
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3d9978
2016-07-09 16:29:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@a3d9978
2016-07-09 16:29:55 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:29:56 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@482d776b
2016-07-09 16:29:56 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 16:29:56 DEBUG SQL:92 - delete from OrderName
2016-07-09 16:29:57 DEBUG SQL:92 - delete from employee
2016-07-09 16:29:57 DEBUG SQL:92 - delete from dish
2016-07-09 16:29:57 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 16:29:57 DEBUG SQL:92 - select max(id) from employee
2016-07-09 16:29:57 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [102333]
2016-07-09 16:29:57 TRACE EnumType:321 - Binding [senior_waiter] to parameter: [3]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [20000.0]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zag]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [1]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [3331023]
2016-07-09 16:29:57 TRACE EnumType:321 - Binding [cleaner] to parameter: [3]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [50000.0]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zagreb]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [2]
2016-07-09 16:29:57 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 16:29:57 DEBUG SQL:92 - select max(id) from dish
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:29:57 TRACE EnumType:321 - Binding [second] to parameter: [1]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Plov]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [300]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [1]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:29:57 TRACE EnumType:321 - Binding [first] to parameter: [1]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Soup]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [400]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [2]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:29:57 TRACE EnumType:321 - Binding [third] to parameter: [1]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Compot]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [500]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [900.0]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [3]
2016-07-09 16:29:57 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:29:57 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:29:57 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:29:57 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 16:29:57 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:29:57 EEST 2016]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [1]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:29:57 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 16:29:57 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:29:57 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:29:57 EEST 2016]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [2]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 16:29:57 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:29:57 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 16:29:57 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 16:29:57 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_0_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:29:57 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 16:29:57 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [102333]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_0_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 16:29:57 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:29:57 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:29:57 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 16:29:57 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:29:57 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f736069
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2fb3536e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7205765b
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@434a63ab
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@434a63ab
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a44431a
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a44431a
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4803b726
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4803b726
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e11f9e9
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32502377
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@21282ed8
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21282ed8
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@67f639d3
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67f639d3
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@51e69659
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51e69659
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b11171f
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d9345cd
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6bd61f98
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bd61f98
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7d4f9aae
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d4f9aae
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@273e7444
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@273e7444
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@771a660
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@771a660
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@130c12b7
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25641d39
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e350b40
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@13e344d
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@46cdf8bd
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46cdf8bd
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26d9b808
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2cf3d63b
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cf3d63b
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@202b0582
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@202b0582
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58cbafc2
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74d1dc36
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@75437611
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75437611
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17f9d882
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3d9978
2016-07-09 16:34:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@a3d9978
2016-07-09 16:34:09 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:34:10 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@482d776b
2016-07-09 16:34:11 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 16:34:11 DEBUG SQL:92 - delete from OrderName
2016-07-09 16:34:11 DEBUG SQL:92 - delete from employee
2016-07-09 16:34:11 DEBUG SQL:92 - delete from dish
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f736069
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2fb3536e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7205765b
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1da2cb77
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5acf93bb
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1af2d44a
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f5acb9d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@741a8937
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6392827e
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@485966cc
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@434a63ab
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@434a63ab
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a44431a
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a44431a
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4803b726
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4803b726
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e11f9e9
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32502377
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@21282ed8
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21282ed8
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@67f639d3
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67f639d3
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@51e69659
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51e69659
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47d9a273
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b11171f
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4b0d79fc
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d9345cd
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6bd61f98
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6bd61f98
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7d4f9aae
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d4f9aae
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@273e7444
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@273e7444
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@771a660
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@771a660
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@130c12b7
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@70e9c95d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e6a8155
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25641d39
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@18df8434
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e0b4072
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e350b40
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@13e344d
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@46cdf8bd
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46cdf8bd
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26d9b808
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2cf3d63b
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2cf3d63b
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@202b0582
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@202b0582
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58cbafc2
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74d1dc36
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@19e4653c
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@75437611
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75437611
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17f9d882
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:34:39 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:34:40 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3d9978
2016-07-09 16:34:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@a3d9978
2016-07-09 16:34:40 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4f80542f
2016-07-09 16:34:40 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@482d776b
2016-07-09 16:34:41 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 16:34:41 DEBUG SQL:92 - select max(id) from employee
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6da21078
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@169e6180
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@47987356
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f259
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1b194a
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1151e434
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d710f1a
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e600dd5
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7b36aa0c
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@41a0aa7d
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ffaf86
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f78a47e
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2034b64c
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7161d8d1
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@795509d9
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f485fda
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:36:18 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:36:18 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:36:18 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@297ea53a
2016-07-09 16:36:19 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 16:36:19 DEBUG SQL:92 - delete from OrderName
2016-07-09 16:36:19 DEBUG SQL:92 - delete from employee
2016-07-09 16:36:19 DEBUG SQL:92 - delete from dish
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@18d87d80
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@18d87d80
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18d87d80
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c24b813
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@741a8937
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fd83fc1
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2ed2d9cb
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2ed2d9cb
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ed2d9cb
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5d0a1059
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5d0a1059
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d0a1059
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@57cf54e1
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@57cf54e1
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57cf54e1
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2805d709
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2805d709
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2805d709
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@316bcf94
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@316bcf94
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@316bcf94
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4dbb42b7
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4dbb42b7
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4dbb42b7
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@23c30a20
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@23c30a20
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23c30a20
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27462a88
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27462a88
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@201a4587
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@201a4587
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@47d9a273
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@47d9a273
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2dc54ad4
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@428640fa
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4efac082
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4efac082
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@53aac487
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@53aac487
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@771a660
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@771a660
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5a45133e
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5a45133e
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5a45133e
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60bd273d
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5d534f5d
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d534f5d
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d534f5d
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d5650ae
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6221a451
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6221a451
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7b36aa0c
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b36aa0c
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65c7a252
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65c7a252
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@791f145a
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@791f145a
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13e344d
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13e344d
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6c1a5b54
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@368247b9
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@368247b9
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@368247b9
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@738dc9b
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@738dc9b
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@738dc9b
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2892d68
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2e385cce
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2e385cce
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2e385cce
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f0c8a99
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f0c8a99
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f0c8a99
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7526515b
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@11392934
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@248e319b
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@248e319b
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e8c3cb
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4be29ed9
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4be29ed9
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@28261e8e
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28261e8e
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@35dab4eb
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f191845
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@909217e
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@273444fe
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@273444fe
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5524cca1
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5032714f
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48bb62
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@353352b6
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4681c175
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57a78e3
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@402c4085
2016-07-09 16:36:33 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6fa51cd4
2016-07-09 16:36:34 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@484094a5
2016-07-09 16:36:34 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@484094a5
2016-07-09 16:36:34 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@13e344d
2016-07-09 16:36:34 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@42b64ab8
2016-07-09 16:36:35 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_
2016-07-09 16:36:35 DEBUG SQL:92 - select max(id) from employee
2016-07-09 16:36:35 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, DTYPE, id) values (?, ?, ?, ?, ?, 'Employee', ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [102333]
2016-07-09 16:36:35 TRACE EnumType:321 - Binding [senior_waiter] to parameter: [3]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [20000.0]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zag]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [1]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, DTYPE, id) values (?, ?, ?, ?, ?, 'Waiter', ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [3331023]
2016-07-09 16:36:35 TRACE EnumType:321 - Binding [cleaner] to parameter: [3]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [50000.0]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zagreb]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [2]
2016-07-09 16:36:35 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 16:36:35 DEBUG SQL:92 - select max(id) from dish
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:36:35 TRACE EnumType:321 - Binding [second] to parameter: [1]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Plov]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [300]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [1]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:36:35 TRACE EnumType:321 - Binding [first] to parameter: [1]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Soup]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [400]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [2]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:36:35 TRACE EnumType:321 - Binding [third] to parameter: [1]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Compot]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [500]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [900.0]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [3]
2016-07-09 16:36:35 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Waiter]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Natasha]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [3331023]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [50000.0]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:36:35 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:36:35 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:36:35 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:36:35 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 16:36:35 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:36:35 EEST 2016]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [1]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:36:35 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [1]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Employee]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Pavel]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [102333]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [20000.0]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zag]
2016-07-09 16:36:35 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:36:35 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:36:35 EEST 2016]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [2]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 16:36:35 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:36:35 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 16:36:35 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 16:36:35 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Waiter]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_0_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:36:35 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:36:35 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 16:36:35 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Employee]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [102333]
2016-07-09 16:36:35 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_0_]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 16:36:35 DEBUG SQL:92 - select ordernames0_.employee_id as employee4_3_0_, ordernames0_.id as id1_3_0_, ordernames0_.id as id1_3_1_, ordernames0_.table_number as table_nu2_3_1_, ordernames0_.time as time3_3_1_, ordernames0_.employee_id as employee4_3_1_ from OrderName ordernames0_ where ordernames0_.employee_id=?
2016-07-09 16:36:35 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_3_1_] : [BIGINT]) - [1]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([employee4_3_0_] : [INTEGER]) - [2]
2016-07-09 16:36:35 TRACE BasicExtractor:61 - extracted value ([id1_3_0_] : [BIGINT]) - [1]
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7133da86
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7133da86
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7133da86
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4229bb3f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7205765b
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6283d8b8
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@a530d0a
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@a530d0a
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@a530d0a
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@614ca7df
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@614ca7df
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@614ca7df
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@58695725
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@58695725
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58695725
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@25fb8912
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@25fb8912
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@25fb8912
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6fd83fc1
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6fd83fc1
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6fd83fc1
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43dac38f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43dac38f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43dac38f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@593aaf41
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@593aaf41
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@593aaf41
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ee37e5a
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ee37e5a
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17497425
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17497425
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@316bcf94
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@316bcf94
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31fa1761
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@66f57048
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@437da279
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@437da279
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@71a8adcf
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71a8adcf
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@61001b64
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61001b64
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1b11171f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1b11171f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1b11171f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4659191b
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@d9345cd
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@d9345cd
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@d9345cd
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@59505b48
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@b9b00e0
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@b9b00e0
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@53aac487
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53aac487
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@272113c4
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@272113c4
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3f6f6701
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3f6f6701
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@130c12b7
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@130c12b7
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5d534f5d
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6fdbe764
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6fdbe764
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6fdbe764
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3012646b
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3012646b
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3012646b
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@537f60bf
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@229c6181
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@229c6181
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@229c6181
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b45a2f5
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b45a2f5
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b45a2f5
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6340e5f0
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6c1a5b54
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@26d9b808
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26d9b808
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7526515b
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@173ed316
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@173ed316
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@58cbafc2
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58cbafc2
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74d1dc36
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1cf6d1be
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5149d738
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@17f9d882
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@17f9d882
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f485fda
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28261e8e
2016-07-09 16:37:54 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d737b89
2016-07-09 16:37:55 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3b96c42e
2016-07-09 16:37:55 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3b96c42e
2016-07-09 16:37:55 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@130c12b7
2016-07-09 16:37:55 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@5bf22f18
2016-07-09 16:37:56 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 16:37:56 DEBUG SQL:92 - delete from OrderName
2016-07-09 16:37:56 DEBUG SQL:92 - delete from employee
2016-07-09 16:37:56 DEBUG SQL:92 - delete from dish
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6da21078
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@169e6180
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@47987356
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f259
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1b194a
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1151e434
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d710f1a
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e600dd5
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7b36aa0c
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@41a0aa7d
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ffaf86
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f78a47e
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2034b64c
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7161d8d1
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@795509d9
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f485fda
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:38:21 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:38:21 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:38:22 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@297ea53a
2016-07-09 16:38:23 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_
2016-07-09 16:38:23 DEBUG SQL:92 - select max(id) from employee
2016-07-09 16:38:23 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, DTYPE, id) values (?, ?, ?, ?, ?, 'Employee', ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [102333]
2016-07-09 16:38:23 TRACE EnumType:321 - Binding [senior_waiter] to parameter: [3]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [20000.0]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zag]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [1]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, DTYPE, id) values (?, ?, ?, ?, ?, 'Waiter', ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [3331023]
2016-07-09 16:38:23 TRACE EnumType:321 - Binding [cleaner] to parameter: [3]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [50000.0]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zagreb]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [2]
2016-07-09 16:38:23 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 16:38:23 DEBUG SQL:92 - select max(id) from dish
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:38:23 TRACE EnumType:321 - Binding [second] to parameter: [1]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Plov]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [300]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [1]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:38:23 TRACE EnumType:321 - Binding [first] to parameter: [1]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Soup]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [400]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [2]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:38:23 TRACE EnumType:321 - Binding [third] to parameter: [1]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Compot]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [500]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [900.0]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [3]
2016-07-09 16:38:23 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Waiter]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Natasha]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [3331023]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [50000.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:38:23 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:38:23 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:38:23 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:38:23 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 16:38:23 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:38:23 EEST 2016]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [1]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:38:23 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Employee]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Pavel]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [102333]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [20000.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zag]
2016-07-09 16:38:23 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:38:23 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:38:23 EEST 2016]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [2]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 16:38:23 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:38:23 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 16:38:23 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 16:38:23 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Waiter]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_0_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:38:23 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:38:23 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 16:38:23 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Employee]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [102333]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_0_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 16:38:23 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:38:23 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:38:23 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 16:38:23 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:38:23 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6da21078
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@169e6180
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@47987356
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f259
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1b194a
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1151e434
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d710f1a
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e600dd5
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7b36aa0c
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@41a0aa7d
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ffaf86
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f78a47e
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2034b64c
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7161d8d1
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@795509d9
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:40:12 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f485fda
2016-07-09 16:40:13 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:40:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:40:13 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:40:13 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@297ea53a
2016-07-09 16:40:14 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Employee]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Pavel]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [102333]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [20000.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zag]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Waiter]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Natasha]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [3331023]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [50000.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:40:14 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:40:14 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Waiter]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Natasha]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [3331023]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [50000.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:40:14 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:40:14 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:40:14 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 16:40:14 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:40:14 EEST 2016]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [3]
2016-07-09 16:40:14 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 16:40:14 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:40:14 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Employee]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Pavel]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [102333]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [20000.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zag]
2016-07-09 16:40:14 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:40:14 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:40:14 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:40:14 EEST 2016]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [4]
2016-07-09 16:40:14 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 16:40:14 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:40:14 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [4]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 16:40:14 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Waiter]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 16:40:14 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Employee]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [102333]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_0_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#3]
2016-07-09 16:40:14 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#4]
2016-07-09 16:40:14 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:14 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:40:14 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 16:40:14 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@18d87d80
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@18d87d80
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18d87d80
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c24b813
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@741a8937
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fd83fc1
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2ed2d9cb
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2ed2d9cb
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ed2d9cb
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5d0a1059
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5d0a1059
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d0a1059
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@57cf54e1
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@57cf54e1
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57cf54e1
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2805d709
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2805d709
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2805d709
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@316bcf94
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@316bcf94
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@316bcf94
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4dbb42b7
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4dbb42b7
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4dbb42b7
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@23c30a20
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@23c30a20
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23c30a20
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27462a88
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27462a88
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@201a4587
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@201a4587
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@47d9a273
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@47d9a273
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2dc54ad4
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@428640fa
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4efac082
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4efac082
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@53aac487
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@53aac487
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@771a660
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@771a660
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5a45133e
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5a45133e
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5a45133e
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@60bd273d
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5d534f5d
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5d534f5d
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5d534f5d
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d5650ae
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6221a451
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6221a451
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7b36aa0c
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b36aa0c
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65c7a252
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65c7a252
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@791f145a
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@791f145a
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13e344d
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13e344d
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6c1a5b54
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@368247b9
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@368247b9
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@368247b9
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@738dc9b
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@738dc9b
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@738dc9b
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2892d68
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2e385cce
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2e385cce
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2e385cce
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f0c8a99
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f0c8a99
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f0c8a99
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7526515b
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@11392934
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@248e319b
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@248e319b
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e8c3cb
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4be29ed9
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4be29ed9
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@28261e8e
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28261e8e
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@35dab4eb
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f191845
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@909217e
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@273444fe
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@273444fe
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5524cca1
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5032714f
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48bb62
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@353352b6
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4681c175
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57a78e3
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@402c4085
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6fa51cd4
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@484094a5
2016-07-09 16:40:40 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@484094a5
2016-07-09 16:40:40 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@13e344d
2016-07-09 16:40:41 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@42b64ab8
2016-07-09 16:40:42 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 16:40:42 DEBUG SQL:92 - delete from OrderName
2016-07-09 16:40:42 DEBUG SQL:92 - delete from employee
2016-07-09 16:40:42 DEBUG SQL:92 - delete from dish
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32ee6fee
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6da21078
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@169e6180
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@47987356
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48f278eb
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d87d80
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@306e95ec
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ed2d9cb
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1de76cc7
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6e0f5f7f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c7f66c4
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@ffaa6af
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1de5f259
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c1b194a
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36916eb0
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6253c26
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47e2e487
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b8ee4de
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1151e434
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1909a3
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d710f1a
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48aca48b
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72e5a8e
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7db12bb6
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d52216b
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e600dd5
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4d5650ae
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6221a451
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7b36aa0c
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@65c7a252
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@791f145a
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@41a0aa7d
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ffaf86
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f0c8a99
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f78a47e
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7674f035
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235ecd9f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2034b64c
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7161d8d1
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@795509d9
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@350aac89
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a83a74a
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1349883
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b29d1d2
2016-07-09 16:41:09 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f485fda
2016-07-09 16:41:10 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:41:10 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@61544ae6
2016-07-09 16:41:10 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@60bd273d
2016-07-09 16:41:10 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@297ea53a
2016-07-09 16:41:11 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 16:41:11 DEBUG SQL:92 - delete from OrderName
2016-07-09 16:41:11 DEBUG SQL:92 - delete from employee
2016-07-09 16:41:11 DEBUG SQL:92 - delete from dish
2016-07-09 16:41:11 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_
2016-07-09 16:41:11 DEBUG SQL:92 - select max(id) from employee
2016-07-09 16:41:11 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, DTYPE, id) values (?, ?, ?, ?, ?, 'Employee', ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [102333]
2016-07-09 16:41:11 TRACE EnumType:321 - Binding [senior_waiter] to parameter: [3]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [20000.0]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zag]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [1]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, DTYPE, id) values (?, ?, ?, ?, ?, 'Waiter', ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [3331023]
2016-07-09 16:41:11 TRACE EnumType:321 - Binding [cleaner] to parameter: [3]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [50000.0]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [5] as [VARCHAR] - [Zagreb]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [6] as [INTEGER] - [2]
2016-07-09 16:41:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 16:41:11 DEBUG SQL:92 - select max(id) from dish
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:41:11 TRACE EnumType:321 - Binding [second] to parameter: [1]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Plov]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [300]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [1]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:41:11 TRACE EnumType:321 - Binding [first] to parameter: [1]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Soup]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [400]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [200.0]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [2]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 16:41:11 TRACE EnumType:321 - Binding [third] to parameter: [1]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [VARCHAR] - [Compot]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [3] as [VARCHAR] - [500]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [FLOAT] - [900.0]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [5] as [BIGINT] - [3]
2016-07-09 16:41:11 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Waiter]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Natasha]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [3331023]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [50000.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:41:11 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:41:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:41:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:41:11 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 16:41:11 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:41:11 EEST 2016]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [1]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:41:11 DEBUG SQL:92 - select employee0_.id as id2_2_, employee0_.name as name3_2_, employee0_.phone_number as phone_nu4_2_, employee0_.position as position5_2_, employee0_.salary as salary6_2_, employee0_.surname as surname7_2_, employee0_.DTYPE as DTYPE1_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id2_2_] : [INTEGER]) - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_] : [VARCHAR]) - [Employee]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_2_] : [VARCHAR]) - [Pavel]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_] : [VARCHAR]) - [102333]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([salary6_2_] : [FLOAT]) - [20000.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([surname7_2_] : [VARCHAR]) - [Zag]
2016-07-09 16:41:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 16:41:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 16:41:11 EEST 2016]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [2]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 16:41:11 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 16:41:11 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 16:41:11 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 16:41:11 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Waiter]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [cleaner] as column [position5_2_0_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 16:41:11 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.Waiter.orderNames#2]
2016-07-09 16:41:11 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 16:41:11 DEBUG SQL:92 - select employee0_.id as id2_2_0_, employee0_.name as name3_2_0_, employee0_.phone_number as phone_nu4_2_0_, employee0_.position as position5_2_0_, employee0_.salary as salary6_2_0_, employee0_.surname as surname7_2_0_, employee0_.DTYPE as DTYPE1_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([DTYPE1_2_0_] : [VARCHAR]) - [Employee]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([phone_nu4_2_0_] : [VARCHAR]) - [102333]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [senior_waiter] as column [position5_2_0_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([salary6_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([surname7_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 16:41:11 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 16:41:11 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 16:41:11 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 16:41:11 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 16:41:11 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
