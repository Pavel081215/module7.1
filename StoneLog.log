2016-07-09 00:22:40 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 00:22:40 DEBUG SQL:92 - select max(id) from employee
2016-07-09 00:22:40 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 00:22:40 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 00:22:40 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 00:22:40 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 00:22:40 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 00:31:38 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 00:31:38 DEBUG SQL:92 - select max(id) from employee
2016-07-09 00:31:38 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 00:31:38 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 00:31:38 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 00:31:38 DEBUG SQL:92 - select max(id) from dish
2016-07-09 00:31:38 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 00:31:38 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 00:31:38 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 00:31:38 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 00:31:38 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 00:31:38 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 00:31:38 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:07:43 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:07:43 DEBUG SQL:92 - select max(id) from employee
2016-07-09 01:07:43 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 01:07:43 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 01:07:43 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:07:43 DEBUG SQL:92 - select max(id) from dish
2016-07-09 01:07:43 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:07:43 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:07:43 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:07:43 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:07:43 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:07:43 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:07:43 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:07:44 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:07:44 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:07:44 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:07:44 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "dish_to_order_pkey"
  Detail: Key (order_id)=(1) already exists.
2016-07-09 01:07:44 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-09 01:09:39 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:09:39 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:09:39 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:09:39 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:09:39 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:09:39 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 01:09:39 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 01:13:27 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:13:27 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:13:27 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:13:27 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:13:27 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:13:27 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 01:13:27 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 01:16:03 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:16:03 DEBUG SQL:92 - select max(id) from employee
2016-07-09 01:16:03 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 01:16:03 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 01:16:03 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:16:03 DEBUG SQL:92 - select max(id) from dish
2016-07-09 01:16:03 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:16:03 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:16:03 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:16:03 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:16:03 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:16:03 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:16:03 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:16:04 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:16:04 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:16:04 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:16:04 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "dish_to_order_pkey"
  Detail: Key (order_id)=(1) already exists.
2016-07-09 01:16:04 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-09 01:18:56 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:18:56 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:18:56 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:18:56 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:18:56 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:18:56 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:18:56 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:18:56 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:18:56 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:18:56 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "dish_to_order_pkey"
  Detail: Key (order_id)=(1) already exists.
2016-07-09 01:18:56 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-09 01:20:11 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:20:11 DEBUG SQL:92 - select max(id) from employee
2016-07-09 01:20:11 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:20:11 DEBUG SQL:92 - select max(id) from dish
2016-07-09 01:20:11 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:20:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:20:11 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:20:11 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:20:11 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:20:11 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:20:11 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "dish_to_order_pkey"
  Detail: Key (order_id)=(1) already exists.
2016-07-09 01:20:11 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-09 01:21:27 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:21:27 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:21:27 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:21:27 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:21:27 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:21:27 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:21:27 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:21:27 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:21:27 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:21:27 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "dish_to_order_pkey"
  Detail: Key (order_id)=(1) already exists.
2016-07-09 01:21:27 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-09 01:32:01 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:32:01 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:32:01 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:32:01 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:32:01 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:32:01 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:32:01 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:32:01 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:32:01 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:32:01 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "dish_to_order_pkey"
  Detail: Key (order_id)=(1) already exists.
2016-07-09 01:32:01 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-09 01:33:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:33:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:33:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:33:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:33:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:33:33 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:33:33 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:33:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:33:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:33:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:33:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:33:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:33:33 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:33:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:33:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:33:33 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 01:33:33 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 01:33:33 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 01:34:09 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:34:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:34:09 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:34:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:09 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:34:09 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:34:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:09 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:34:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:09 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:34:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:09 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 01:34:09 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 01:34:09 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 01:34:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 01:34:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 01:34:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:34:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:33 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 01:34:33 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:34:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 01:34:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 01:34:33 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 01:34:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 01:34:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 09:39:33 DEBUG SQL:92 - select max(id) from employee
2016-07-09 09:39:33 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 09:39:33 DEBUG SQL:92 - select max(id) from dish
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:39:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:39:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:39:33 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 09:39:33 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:39:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:39:33 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:39:33 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:39:33 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 09:39:33 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 09:39:33 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 09:39:59 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 09:40:00 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 09:40:00 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:40:00 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:00 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:00 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 09:40:00 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:40:00 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:00 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:00 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:40:00 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:00 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:00 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:40:00 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:00 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:09 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 09:40:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 09:40:09 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:40:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:09 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 09:40:09 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:40:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:09 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:40:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:09 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:40:09 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:40:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:40:09 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 09:41:52 DEBUG SQL:92 - select max(id) from employee
2016-07-09 09:41:52 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into employee (name, phone_number, position, salary, surname, id) values (?, ?, ?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 09:41:52 DEBUG SQL:92 - select max(id) from dish
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish (dish_category, name, price, weigth, id) values (?, ?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:41:52 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:41:52 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:41:52 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 09:41:52 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 09:41:52 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:41:52 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 09:41:52 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:41:52 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 09:47:53 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 09:47:53 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 09:47:53 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 09:55:01 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 09:55:01 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 09:55:01 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 09:55:01 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 09:55:01 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@614ca7df
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@614ca7df
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@614ca7df
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@543588e6
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7bd4937b
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@58d75e99
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@bae7dc0
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@bae7dc0
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@bae7dc0
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2ed2d9cb
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2ed2d9cb
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2ed2d9cb
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1de76cc7
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1de76cc7
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1de76cc7
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@57cf54e1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@57cf54e1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57cf54e1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@17497425
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@17497425
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17497425
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@729d991e
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@729d991e
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@729d991e
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@550dbc7a
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@550dbc7a
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@550dbc7a
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@290222c1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@290222c1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27462a88
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27462a88
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@201a4587
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@201a4587
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47d9a273
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2dc54ad4
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@428640fa
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@428640fa
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@b9b00e0
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b9b00e0
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@273e7444
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273e7444
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@242b836
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@242b836
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@242b836
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@942a29c
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@60bd273d
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@60bd273d
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@60bd273d
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e600dd5
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4d5650ae
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d5650ae
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6221a451
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6221a451
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b36aa0c
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b36aa0c
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@65c7a252
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65c7a252
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@e350b40
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@e350b40
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6340e5f0
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6c1a5b54
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c1a5b54
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6c1a5b54
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@368247b9
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@368247b9
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@368247b9
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@738dc9b
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2892d68
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2892d68
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2892d68
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2e385cce
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2e385cce
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2e385cce
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@f0c8a99
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7526515b
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@74ea2410
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74ea2410
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@27406a17
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@795509d9
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@795509d9
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@15043a2f
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15043a2f
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b29d1d2
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d737b89
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f191845
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5b218417
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5b218417
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@413d1baf
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16eb3ea3
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@273444fe
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@33bc72d1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a75e76a
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5524cca1
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5032714f
2016-07-09 13:35:43 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48bb62
2016-07-09 13:35:44 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4c1f22f3
2016-07-09 13:35:44 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@4c1f22f3
2016-07-09 13:35:44 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@e350b40
2016-07-09 13:35:44 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@eb6449b
2016-07-09 13:35:45 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:35:45 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:35:45 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:35:45 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 13:35:45 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:35:45 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_0_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:35:45 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 13:35:45 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:35:45 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [102333]
2016-07-09 13:35:45 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_0_]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 13:35:45 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 13:35:45 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:35:45 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:35:46 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:35:46 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:35:46 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:35:46 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:35:46 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:35:46 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3bf9ce3e
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3bf9ce3e
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3bf9ce3e
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d0f2471
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6da21078
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56cdfb3b
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47987356
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47987356
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47987356
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@611889f4
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@611889f4
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@611889f4
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7e7be63f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7e7be63f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7e7be63f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1e04fa0a
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1e04fa0a
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e04fa0a
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2c35e847
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2c35e847
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2c35e847
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6fd83fc1
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6fd83fc1
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fd83fc1
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2ed2d9cb
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2ed2d9cb
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ed2d9cb
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@593aaf41
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@593aaf41
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d4349f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d4349f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2ea41516
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ea41516
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@f0da945
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6404f418
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@957e06
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@957e06
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@437da279
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@437da279
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6253c26
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6253c26
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@47e2e487
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47e2e487
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47e2e487
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4310d43
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@27f981c6
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@27f981c6
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@27f981c6
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dc54ad4
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@428640fa
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@428640fa
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4efac082
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4efac082
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@506ae4d4
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@506ae4d4
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@52b1beb6
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52b1beb6
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f6f6701
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f6f6701
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ed6388a
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@121314f7
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@121314f7
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@121314f7
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e3967ea
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e3967ea
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e3967ea
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@51c668e3
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4a883b15
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a883b15
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4a883b15
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5677323c
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5677323c
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5677323c
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4686afc2
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@f09733f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@750e2b97
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@750e2b97
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2ddc9a9f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@543295b0
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e27ba32
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@202b0582
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@75d3a5e0
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@53fb3dab
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53fb3dab
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@712625fd
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bba5817
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@742ff096
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@75437611
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@350aac89
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c5920df
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17f9d882
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6ccdb29f
2016-07-09 13:36:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6ccdb29f
2016-07-09 13:36:17 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3f6f6701
2016-07-09 13:36:18 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@186978a6
2016-07-09 13:36:19 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:36:19 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:36:19 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:36:19 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:36:19 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:36:19 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 13:36:19 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 13:36:19 EEST 2016]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [3]
2016-07-09 13:36:19 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 13:36:19 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 13:36:19 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:36:19 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:36:19 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:36:19 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 13:36:19 EEST 2016]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [4]
2016-07-09 13:36:19 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 13:36:19 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 13:36:19 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [4]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:36:19 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 13:36:19 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:36:19 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 13:36:19 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [102333]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_0_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 13:36:19 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#3]
2016-07-09 13:36:19 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#4]
2016-07-09 13:36:19 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:36:19 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:36:19 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 13:36:19 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e7be63f
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e7be63f
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e7be63f
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@618425b5
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c24b813
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@21e360a
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fd83fc1
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fd83fc1
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fd83fc1
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1b2abca6
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1b2abca6
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b2abca6
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5d0a1059
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5d0a1059
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d0a1059
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5a56cdac
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5a56cdac
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a56cdac
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c7f66c4
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c7f66c4
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c7f66c4
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3e11f9e9
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3e11f9e9
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e11f9e9
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4dbb42b7
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4dbb42b7
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4dbb42b7
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3cebbb30
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3cebbb30
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@49049a04
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@49049a04
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@51e69659
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51e69659
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54a7079e
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b11171f
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4b0d79fc
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b0d79fc
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@48aca48b
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@48aca48b
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@53aac487
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53aac487
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@771a660
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@771a660
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@771a660
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f6f6701
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@534a5a98
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@534a5a98
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@534a5a98
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@121314f7
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2e3967ea
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e3967ea
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@51c668e3
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51c668e3
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a883b15
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a883b15
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@5677323c
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5677323c
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b45a2f5
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b45a2f5
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a0aa7d
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1ffaf86
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ffaf86
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1ffaf86
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20140db9
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20140db9
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20140db9
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@55a147cc
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4145bad8
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4145bad8
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4145bad8
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@750e2b97
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@750e2b97
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@750e2b97
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2a7f1f10
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@f78a47e
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@173ed316
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@173ed316
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17f62e33
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@663c9e7a
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@663c9e7a
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@196a42c3
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@196a42c3
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a83a74a
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f485fda
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2d901eb0
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2cb4893b
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cb4893b
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@645aa696
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6caf0677
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@413d1baf
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16eb3ea3
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@273444fe
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@33bc72d1
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a75e76a
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5524cca1
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@64bce832
2016-07-09 13:37:53 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@64bce832
2016-07-09 13:37:53 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b45a2f5
2016-07-09 13:37:54 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@274872f8
2016-07-09 13:37:55 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:37:55 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:37:55 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:37:55 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:37:55 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:37:55 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 13:37:55 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 13:37:55 EEST 2016]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [5]
2016-07-09 13:37:55 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [5]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 13:37:55 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [5]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:37:55 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:37:55 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:37:55 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 13:37:55 EEST 2016]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [6]
2016-07-09 13:37:55 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [6]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 13:37:55 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [6]
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [4]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [5]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [6]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:37:55 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 13:37:55 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:37:55 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 13:37:55 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [102333]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_0_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 13:37:55 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#3]
2016-07-09 13:37:55 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#4]
2016-07-09 13:37:55 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#5]
2016-07-09 13:37:55 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#6]
2016-07-09 13:37:55 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [5]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [5]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [5]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:37:55 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:37:55 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [6]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [6]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [6]
2016-07-09 13:37:55 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e7be63f
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e7be63f
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e7be63f
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@618425b5
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c24b813
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@21e360a
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fd83fc1
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fd83fc1
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fd83fc1
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1b2abca6
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1b2abca6
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b2abca6
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5d0a1059
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5d0a1059
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d0a1059
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5a56cdac
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5a56cdac
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a56cdac
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c7f66c4
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c7f66c4
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c7f66c4
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3e11f9e9
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3e11f9e9
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e11f9e9
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4dbb42b7
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4dbb42b7
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4dbb42b7
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3cebbb30
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3cebbb30
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@49049a04
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@49049a04
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@51e69659
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51e69659
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54a7079e
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b11171f
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4b0d79fc
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b0d79fc
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@48aca48b
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@48aca48b
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@53aac487
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53aac487
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@771a660
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@771a660
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@771a660
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f6f6701
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@534a5a98
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@534a5a98
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@534a5a98
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@121314f7
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2e3967ea
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e3967ea
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@51c668e3
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51c668e3
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a883b15
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a883b15
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@5677323c
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5677323c
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b45a2f5
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b45a2f5
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a0aa7d
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1ffaf86
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ffaf86
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1ffaf86
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@20140db9
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@20140db9
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@20140db9
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@55a147cc
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4145bad8
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4145bad8
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4145bad8
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@750e2b97
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@750e2b97
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@750e2b97
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2a7f1f10
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@f78a47e
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@173ed316
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@173ed316
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17f62e33
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@663c9e7a
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@663c9e7a
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@196a42c3
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@196a42c3
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a83a74a
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f485fda
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2d901eb0
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2cb4893b
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cb4893b
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@645aa696
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6caf0677
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@413d1baf
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16eb3ea3
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@273444fe
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@33bc72d1
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a75e76a
2016-07-09 13:39:29 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5524cca1
2016-07-09 13:39:30 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@64bce832
2016-07-09 13:39:30 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@64bce832
2016-07-09 13:39:30 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4b45a2f5
2016-07-09 13:39:30 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@274872f8
2016-07-09 13:39:31 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:39:31 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:39:31 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Natasha]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Natasha]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [3331023]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [50000.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:39:31 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Soup]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Soup]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [400]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:39:31 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:39:31 DEBUG SQL:92 - select max(id) from OrderName
2016-07-09 13:39:31 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 13:39:31 EEST 2016]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [2]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [7]
2016-07-09 13:39:31 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [7]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-09 13:39:31 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [7]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 13:39:31 DEBUG SQL:92 - select employee0_.id as id1_2_, employee0_.name as name2_2_, employee0_.phone_number as phone_nu3_2_, employee0_.position as position4_2_, employee0_.salary as salary5_2_, employee0_.surname as surname6_2_ from employee employee0_ where employee0_.name like ?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Pavel]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_2_] : [INTEGER]) - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name2_2_] : [VARCHAR]) - [Pavel]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_] : [VARCHAR]) - [102333]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([salary5_2_] : [FLOAT]) - [20000.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([surname6_2_] : [VARCHAR]) - [Zag]
2016-07-09 13:39:31 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Plov]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Plov]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [300]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [200.0]
2016-07-09 13:39:31 DEBUG SQL:92 - select dish0_.id as id1_0_, dish0_.dish_category as dish_cat2_0_, dish0_.name as name3_0_, dish0_.price as price4_0_, dish0_.weigth as weigth5_0_ from dish dish0_ where dish0_.name like ?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [Compot]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name3_0_] : [VARCHAR]) - [Compot]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([price4_0_] : [VARCHAR]) - [500]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([weigth5_0_] : [FLOAT]) - [900.0]
2016-07-09 13:39:31 DEBUG SQL:92 - insert into OrderName (table_number, time, employee_id, id) values (?, ?, ?, ?)
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [2] as [TIMESTAMP] - [Sat Jul 09 13:39:31 EEST 2016]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [3] as [INTEGER] - [1]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [4] as [BIGINT] - [8]
2016-07-09 13:39:31 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [8]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-09 13:39:31 DEBUG SQL:92 - insert into dish_to_order (order_id, dish_id) values (?, ?)
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [8]
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-09 13:39:31 DEBUG SQL:92 - select ordername0_.id as id1_3_, ordername0_.table_number as table_nu2_3_, ordername0_.time as time3_3_, ordername0_.employee_id as employee4_3_ from OrderName ordername0_
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [3]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [4]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [5]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [6]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [7]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [8]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([table_nu2_3_] : [INTEGER]) - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([time3_3_] : [TIMESTAMP]) - [2016-07-09 00:00:00.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([employee4_3_] : [INTEGER]) - [1]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#1]
2016-07-09 13:39:31 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [2]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Natasha]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [3331023]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [cleaner] as column [position4_2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [50000.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zagreb]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#2]
2016-07-09 13:39:31 DEBUG SQL:92 - select employee0_.id as id1_2_0_, employee0_.name as name2_2_0_, employee0_.phone_number as phone_nu3_2_0_, employee0_.position as position4_2_0_, employee0_.salary as salary5_2_0_, employee0_.surname as surname6_2_0_ from employee employee0_ where employee0_.id=?
2016-07-09 13:39:31 TRACE BasicBinder:65 - binding parameter [1] as [INTEGER] - [1]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([name2_2_0_] : [VARCHAR]) - [Pavel]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([phone_nu3_2_0_] : [VARCHAR]) - [102333]
2016-07-09 13:39:31 TRACE EnumType:419 - Returning [senior_waiter] as column [position4_2_0_]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([salary5_2_0_] : [FLOAT]) - [20000.0]
2016-07-09 13:39:31 TRACE BasicExtractor:61 - extracted value ([surname6_2_0_] : [VARCHAR]) - [Zag]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#3]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#4]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#5]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#6]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#7]
2016-07-09 13:39:31 TRACE CollectionType:756 - Created collection wrapper: [com.hibernate.base.model.OrderName.dishes#8]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE EnumType:419 - Returning [first] as column [dish_cat2_0_1_]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Soup]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [400]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE EnumType:419 - Returning [third] as column [dish_cat2_0_1_]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Compot]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [500]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [900.0]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE EnumType:419 - Returning [second] as column [dish_cat2_0_1_]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([name3_0_1_] : [VARCHAR]) - [Plov]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([price4_0_1_] : [VARCHAR]) - [300]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([weigth5_0_1_] : [FLOAT]) - [200.0]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [4]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [4]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [5]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [5]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [5]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [6]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [6]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [6]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [7]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [7]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [2]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [7]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 13:39:32 DEBUG SQL:92 - select dishes0_.order_id as order_id1_1_0_, dishes0_.dish_id as dish_id2_1_0_, dish1_.id as id1_0_1_, dish1_.dish_category as dish_cat2_0_1_, dish1_.name as name3_0_1_, dish1_.price as price4_0_1_, dish1_.weigth as weigth5_0_1_ from dish_to_order dishes0_ inner join dish dish1_ on dishes0_.dish_id=dish1_.id where dishes0_.order_id=?
2016-07-09 13:39:32 TRACE BasicBinder:65 - binding parameter [1] as [BIGINT] - [8]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [8]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [1]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([id1_0_1_] : [BIGINT]) - [3]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([order_id1_1_0_] : [BIGINT]) - [8]
2016-07-09 13:39:32 TRACE BasicExtractor:61 - extracted value ([dish_id2_1_0_] : [BIGINT]) - [3]
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3bf9ce3e
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3bf9ce3e
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3bf9ce3e
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d0f2471
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6da21078
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56cdfb3b
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47987356
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47987356
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47987356
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@611889f4
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@611889f4
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@611889f4
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7e7be63f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7e7be63f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7e7be63f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1e04fa0a
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1e04fa0a
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e04fa0a
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2c35e847
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2c35e847
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2c35e847
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6fd83fc1
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6fd83fc1
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6fd83fc1
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2ed2d9cb
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2ed2d9cb
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ed2d9cb
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@593aaf41
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@593aaf41
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37d4349f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37d4349f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2ea41516
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ea41516
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@f0da945
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6404f418
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@957e06
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@957e06
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@437da279
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@437da279
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6253c26
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6253c26
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@47e2e487
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@47e2e487
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@47e2e487
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4310d43
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@27f981c6
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@27f981c6
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@27f981c6
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2dc54ad4
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@428640fa
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@428640fa
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4efac082
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4efac082
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@506ae4d4
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@506ae4d4
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@52b1beb6
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52b1beb6
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f6f6701
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f6f6701
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1ed6388a
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@121314f7
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@121314f7
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@121314f7
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e3967ea
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e3967ea
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e3967ea
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@51c668e3
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4a883b15
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a883b15
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4a883b15
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5677323c
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5677323c
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5677323c
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4686afc2
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@f09733f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@750e2b97
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@750e2b97
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2ddc9a9f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7d0b7e3c
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d0b7e3c
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@543295b0
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@543295b0
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e27ba32
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@202b0582
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@75d3a5e0
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@53fb3dab
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53fb3dab
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@712625fd
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7bba5817
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@742ff096
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@75437611
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@350aac89
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1c5920df
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17f9d882
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6ccdb29f
2016-07-09 15:44:38 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6ccdb29f
2016-07-09 15:44:38 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@3f6f6701
2016-07-09 15:44:39 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@186978a6
2016-07-09 15:44:40 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-09 15:44:40 DEBUG SQL:92 - delete from OrderName
2016-07-09 15:44:41 DEBUG SQL:92 - delete from employee
2016-07-09 15:44:41 DEBUG SQL:92 - delete from dish
