2016-07-10 15:20:04 INFO  ClassPathXmlApplicationContext:578 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4926097b: startup date [Sun Jul 10 15:20:04 EEST 2016]; root of context hierarchy
2016-07-10 15:20:04 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [application-context.xml]
2016-07-10 15:20:04 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [hibernate-context.xml]
2016-07-10 15:20:04 INFO  PreferencesPlaceholderConfigurer:172 - Loading properties file from class path resource [jdbc.properties]
2016-07-10 15:20:05 INFO  MLog:124 - MLog clients using log4j logging.
2016-07-10 15:20:05 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2016-07-10 15:20:05 INFO  Version:37 - HHH000412: Hibernate Core {5.1.0.Final}
2016-07-10 15:20:05 INFO  Environment:213 - HHH000206: hibernate.properties not found
2016-07-10 15:20:05 INFO  Environment:317 - HHH000021: Bytecode provider name : javassist
2016-07-10 15:20:06 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5562c41e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73e22a3d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56cdfb3b
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2fb3536e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@48f278eb
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48f278eb
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7e7be63f
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e7be63f
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@18d87d80
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d87d80
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fb3ee4e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5ba3f27a
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5ba3f27a
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ba3f27a
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@209da20d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@209da20d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@209da20d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@342c38f8
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@342c38f8
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@342c38f8
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57cf54e1
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57cf54e1
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2805d709
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2805d709
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@194bcebf
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@194bcebf
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53ce1329
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@729d991e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4dbb42b7
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dbb42b7
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@3cebbb30
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3cebbb30
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@27462a88
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27462a88
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4310d43
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4310d43
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4310d43
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47d9a273
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2dc54ad4
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2dc54ad4
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2dc54ad4
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b0d79fc
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@29215f06
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29215f06
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@13fd2ccd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13fd2ccd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54e1c68b
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54e1c68b
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@783a467b
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@783a467b
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ed6388a
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ed6388a
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f80542f
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@576d5deb
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@576d5deb
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@576d5deb
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a38c7fe
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a38c7fe
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a38c7fe
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@52719fb6
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5824a83d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5824a83d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5824a83d
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d154ccd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d154ccd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d154ccd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@38cee291
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2794eab6
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2ddc9a9f
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2ddc9a9f
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46cdf8bd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2eae8e6e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2eae8e6e
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3e27ba32
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e27ba32
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@202b0582
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58cbafc2
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@74e28667
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@712625fd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@712625fd
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75437611
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@350aac89
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c5920df
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@17f9d882
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@79e4c792
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@196a42c3
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c60d6e9
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15043a2f
2016-07-10 15:20:06 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgeby99h1n13pq2xfphgz|1e9e725a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgeby99h1n13pq2xfphgz|1e9e725a, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/7.1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2016-07-10 15:20:06 INFO  Dialect:156 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL94Dialect
2016-07-10 15:20:06 WARN  NewPooledConnection:559 - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2016-07-10 15:20:06 WARN  NewPooledConnection:560 - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:267)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:692)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.hibernate.base.Main.main(Main.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
2016-07-10 15:20:06 INFO  LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@9ebe38b
2016-07-10 15:20:06 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@9ebe38b
2016-07-10 15:20:06 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@1ed6388a
2016-07-10 15:20:07 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@3a320ade
2016-07-10 15:20:08 INFO  HibernateTransactionManager:357 - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeby99h1n13pq2xfphgz|1e9e725a, dataSourceName -> 1hgeby99h1n13pq2xfphgz|1e9e725a ]] of Hibernate SessionFactory for HibernateTransactionManager
2016-07-10 15:20:08 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2016-07-10 15:20:08 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-10 15:20:08 DEBUG SQL:92 - delete from OrderName
2016-07-10 15:20:08 DEBUG SQL:92 - delete from employee
2016-07-10 15:20:08 DEBUG SQL:92 - delete from dish
2016-07-10 15:20:08 DEBUG SQL:92 - select ingredient0_.id as id1_3_, ingredient0_.name as name2_3_ from ingredient ingredient0_
2016-07-10 15:20:08 DEBUG SQL:92 - select max(id) from ingredient
2016-07-10 15:20:08 DEBUG SQL:92 - insert into ingredient (name, id) values (?, ?)
2016-07-10 15:20:08 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [cabbage]
2016-07-10 15:20:08 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-10 15:27:11 INFO  ClassPathXmlApplicationContext:578 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4926097b: startup date [Sun Jul 10 15:27:11 EEST 2016]; root of context hierarchy
2016-07-10 15:27:11 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [application-context.xml]
2016-07-10 15:27:12 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [hibernate-context.xml]
2016-07-10 15:27:12 INFO  PreferencesPlaceholderConfigurer:172 - Loading properties file from class path resource [jdbc.properties]
2016-07-10 15:27:12 INFO  MLog:124 - MLog clients using log4j logging.
2016-07-10 15:27:13 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2016-07-10 15:27:13 INFO  Version:37 - HHH000412: Hibernate Core {5.1.0.Final}
2016-07-10 15:27:13 INFO  Environment:213 - HHH000206: hibernate.properties not found
2016-07-10 15:27:13 INFO  Environment:317 - HHH000021: Bytecode provider name : javassist
2016-07-10 15:27:13 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@20ccf40b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@20ccf40b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@20ccf40b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47987356
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48f278eb
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1a18644
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@58695725
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@58695725
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@58695725
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@25fb8912
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@25fb8912
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@25fb8912
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@74751b3
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@74751b3
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74751b3
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4f2b503c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4f2b503c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f2b503c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@d5b810e
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@d5b810e
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@d5b810e
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5a56cdac
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5a56cdac
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a56cdac
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2805d709
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2805d709
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2805d709
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ffaa6af
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ffaa6af
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1de5f259
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1de5f259
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2c1b194a
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2c1b194a
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36916eb0
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3cebbb30
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@49049a04
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49049a04
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4310d43
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4310d43
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1151e434
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1151e434
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d9345cd
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d9345cd
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d9345cd
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59505b48
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@b9b00e0
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b9b00e0
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b9b00e0
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@72e5a8e
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@7db12bb6
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7db12bb6
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d52216b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d52216b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1ed6388a
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1ed6388a
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@121314f7
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@121314f7
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6fdbe764
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6fdbe764
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6221a451
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7b36aa0c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7b36aa0c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7b36aa0c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65c7a252
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65c7a252
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65c7a252
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@791f145a
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@41a0aa7d
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@41a0aa7d
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@41a0aa7d
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ffaf86
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ffaf86
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ffaf86
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@20140db9
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@55a147cc
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@11392934
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@11392934
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@76a4ebf2
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5d0bf09b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d0bf09b
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19e4653c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19e4653c
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5149d738
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4be29ed9
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@33065d67
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7f485fda
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f485fda
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8519cb4
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@35dab4eb
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2d901eb0
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ba987b8
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f191845
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f049ea1
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72cc7e6f
2016-07-10 15:27:13 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5afa3c9
2016-07-10 15:27:13 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgeby99h1n1cvdq1cejdkz|709ba3fb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgeby99h1n1cvdq1cejdkz|709ba3fb, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/7.1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2016-07-10 15:27:13 INFO  Dialect:156 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL94Dialect
2016-07-10 15:27:14 WARN  NewPooledConnection:559 - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2016-07-10 15:27:14 WARN  NewPooledConnection:560 - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:267)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:692)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.hibernate.base.Main.main(Main.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
2016-07-10 15:27:14 INFO  LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-07-10 15:27:14 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@39de3d36
2016-07-10 15:27:14 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@39de3d36
2016-07-10 15:27:14 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6fdbe764
2016-07-10 15:27:14 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@76ba13c
2016-07-10 15:27:15 INFO  HibernateTransactionManager:357 - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeby99h1n1cvdq1cejdkz|709ba3fb, dataSourceName -> 1hgeby99h1n1cvdq1cejdkz|709ba3fb ]] of Hibernate SessionFactory for HibernateTransactionManager
2016-07-10 15:27:15 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2016-07-10 15:27:15 DEBUG SQL:92 - delete from dish_to_order where (order_id) in (select id from OrderName)
2016-07-10 15:27:15 DEBUG SQL:92 - delete from OrderName
2016-07-10 15:27:15 DEBUG SQL:92 - delete from employee
2016-07-10 15:27:15 DEBUG SQL:92 - delete from dish
2016-07-10 15:27:15 DEBUG SQL:92 - delete from ingredient
2016-07-10 15:30:01 INFO  ClassPathXmlApplicationContext:578 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4926097b: startup date [Sun Jul 10 15:30:01 EEST 2016]; root of context hierarchy
2016-07-10 15:30:01 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [application-context.xml]
2016-07-10 15:30:01 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [hibernate-context.xml]
2016-07-10 15:30:01 INFO  PreferencesPlaceholderConfigurer:172 - Loading properties file from class path resource [jdbc.properties]
2016-07-10 15:30:02 INFO  MLog:124 - MLog clients using log4j logging.
2016-07-10 15:30:02 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2016-07-10 15:30:03 INFO  Version:37 - HHH000412: Hibernate Core {5.1.0.Final}
2016-07-10 15:30:03 INFO  Environment:213 - HHH000206: hibernate.properties not found
2016-07-10 15:30:03 INFO  Environment:317 - HHH000021: Bytecode provider name : javassist
2016-07-10 15:30:03 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@56cdfb3b
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@56cdfb3b
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56cdfb3b
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35aea049
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@611889f4
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f217633
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@18d87d80
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@18d87d80
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18d87d80
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4fb3ee4e
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4fb3ee4e
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fb3ee4e
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5ba3f27a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5ba3f27a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ba3f27a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@52af26ee
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@52af26ee
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52af26ee
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6392827e
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6392827e
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6392827e
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@54bff557
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@54bff557
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54bff557
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@434a63ab
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@434a63ab
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@434a63ab
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f0da945
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f0da945
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6404f418
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6404f418
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@957e06
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@957e06
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@550dbc7a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23c30a20
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@67f639d3
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@67f639d3
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@201a4587
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@201a4587
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@27f981c6
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27f981c6
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c1909a3
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c1909a3
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c1909a3
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d710f1a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@48aca48b
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@48aca48b
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@48aca48b
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@506ae4d4
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@52b1beb6
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@52b1beb6
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@73e9cf30
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73e9cf30
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3527942a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3527942a
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@4f80542f
2016-07-10 15:30:03 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f80542f
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4d5650ae
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4d5650ae
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51c668e3
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4a883b15
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a883b15
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4a883b15
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5677323c
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5677323c
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5677323c
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4686afc2
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@f09733f
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@f09733f
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@f09733f
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45099dd3
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45099dd3
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45099dd3
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1c7696c6
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1a6d8329
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6d4d66d2
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d4d66d2
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6892b3b6
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2af004b
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2af004b
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1cf6d1be
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1cf6d1be
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@795509d9
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bbe85a8
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@53fb3dab
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1349883
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1349883
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28261e8e
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@d737b89
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8519cb4
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35dab4eb
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d901eb0
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ba987b8
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f191845
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f049ea1
2016-07-10 15:30:04 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgeby99h1n1gic5w89ewz|7364985f, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgeby99h1n1gic5w89ewz|7364985f, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/7.1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2016-07-10 15:30:04 INFO  Dialect:156 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL94Dialect
2016-07-10 15:30:04 WARN  NewPooledConnection:559 - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2016-07-10 15:30:04 WARN  NewPooledConnection:560 - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:267)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:692)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.hibernate.base.Main.main(Main.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
2016-07-10 15:30:04 INFO  LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@673be18f
2016-07-10 15:30:04 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@673be18f
2016-07-10 15:30:04 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@4d5650ae
2016-07-10 15:30:04 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@61526469
2016-07-10 15:30:05 INFO  HibernateTransactionManager:357 - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeby99h1n1gic5w89ewz|7364985f, dataSourceName -> 1hgeby99h1n1gic5w89ewz|7364985f ]] of Hibernate SessionFactory for HibernateTransactionManager
2016-07-10 15:30:05 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2016-07-10 15:30:05 DEBUG SQL:92 - select ingredient0_.id as id1_3_, ingredient0_.name as name2_3_ from ingredient ingredient0_
2016-07-10 15:30:05 DEBUG SQL:92 - select max(id) from ingredient
2016-07-10 15:30:05 DEBUG SQL:92 - insert into ingredient (name, id) values (?, ?)
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [cabbage]
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [1]
2016-07-10 15:30:05 DEBUG SQL:92 - insert into ingredient (name, id) values (?, ?)
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [potato]
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [2]
2016-07-10 15:30:05 DEBUG SQL:92 - insert into ingredient (name, id) values (?, ?)
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [tomatoes]
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [3]
2016-07-10 15:30:05 DEBUG SQL:92 - insert into ingredient (name, id) values (?, ?)
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [1] as [VARCHAR] - [garlic]
2016-07-10 15:30:05 TRACE BasicBinder:65 - binding parameter [2] as [BIGINT] - [4]
2016-07-10 15:30:14 INFO  ClassPathXmlApplicationContext:578 - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4926097b: startup date [Sun Jul 10 15:30:14 EEST 2016]; root of context hierarchy
2016-07-10 15:30:14 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [application-context.xml]
2016-07-10 15:30:15 INFO  XmlBeanDefinitionReader:317 - Loading XML bean definitions from class path resource [hibernate-context.xml]
2016-07-10 15:30:15 INFO  PreferencesPlaceholderConfigurer:172 - Loading properties file from class path resource [jdbc.properties]
2016-07-10 15:30:15 INFO  MLog:124 - MLog clients using log4j logging.
2016-07-10 15:30:15 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2016-07-10 15:30:16 INFO  Version:37 - HHH000412: Hibernate Core {5.1.0.Final}
2016-07-10 15:30:16 INFO  Environment:213 - HHH000206: hibernate.properties not found
2016-07-10 15:30:16 INFO  Environment:317 - HHH000021: Bytecode provider name : javassist
2016-07-10 15:30:16 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@21e360a
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@21e360a
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@21e360a
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@306e95ec
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b2abca6
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@d5b810e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@57cf54e1
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@57cf54e1
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57cf54e1
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2805d709
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2805d709
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2805d709
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@f0da945
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@f0da945
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f0da945
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6404f418
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6404f418
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6404f418
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2c1b194a
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2c1b194a
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2c1b194a
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1e1a0406
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1e1a0406
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e1a0406
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@71a8adcf
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@71a8adcf
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71a8adcf
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54a7079e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54a7079e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b11171f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b11171f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4b0d79fc
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4b0d79fc
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29215f06
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13fd2ccd
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@54e1c68b
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54e1c68b
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2d52216b
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d52216b
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@534a5a98
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@534a5a98
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d534f5d
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d534f5d
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d534f5d
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4d5650ae
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6221a451
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6221a451
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6221a451
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a883b15
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@5677323c
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5677323c
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4686afc2
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4686afc2
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@f09733f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f09733f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@45099dd3
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@45099dd3
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@368247b9
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@368247b9
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55a147cc
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4145bad8
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4145bad8
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4145bad8
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@750e2b97
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@750e2b97
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@750e2b97
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2a7f1f10
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@f78a47e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@f78a47e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@f78a47e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6d4d66d2
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6d4d66d2
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6d4d66d2
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@76a4ebf2
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@5b1669c0
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3e27ba32
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e27ba32
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@202b0582
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@742ff096
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@742ff096
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@72cc7e6f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72cc7e6f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@909217e
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@8458f04
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2cb4893b
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@57a78e3
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57a78e3
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2767e23c
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@710c2b53
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5386659f
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14028087
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@cecf639
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1caa0244
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ce026d3
2016-07-10 15:30:16 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ce69770
2016-07-10 15:30:16 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgeby99h1n1gsko12p0q6y|176d53b2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> org.postgresql.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgeby99h1n1gsko12p0q6y|176d53b2, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:postgresql://localhost:5432/7.1, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2016-07-10 15:30:16 INFO  Dialect:156 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL94Dialect
2016-07-10 15:30:17 WARN  NewPooledConnection:559 - [c3p0] A PooledConnection that has already signalled a Connection error is still in use!
2016-07-10 15:30:17 WARN  NewPooledConnection:560 - [c3p0] Another error has occurred [ java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented. ] which will not be reported to listeners!
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc4.Jdbc4Connection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:753)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.createClob(AbstractJdbc4Connection.java:52)
	at org.postgresql.jdbc4.Jdbc4Connection.createClob(Jdbc4Connection.java:21)
	at com.mchange.v2.c3p0.impl.NewProxyConnection.createClob(NewProxyConnection.java:1408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:113)
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:54)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:267)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:418)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:87)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:692)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1244)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.hibernate.base.Main.main(Main.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
2016-07-10 15:30:17 INFO  LobCreatorBuilderImpl:124 - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
2016-07-10 15:30:17 DEBUG BasicTypeRegistry:135 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77102b91
2016-07-10 15:30:17 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77102b91
2016-07-10 15:30:17 INFO  BasicTypeRegistry:138 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@368247b9
2016-07-10 15:30:17 TRACE TypeFactory:58 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@4eed46ee
2016-07-10 15:30:18 INFO  HibernateTransactionManager:357 - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource[ identityToken -> 1hgeby99h1n1gsko12p0q6y|176d53b2, dataSourceName -> 1hgeby99h1n1gsko12p0q6y|176d53b2 ]] of Hibernate SessionFactory for HibernateTransactionManager
2016-07-10 15:30:18 INFO  QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
2016-07-10 15:30:18 DEBUG SQL:92 - select ingredient0_.id as id1_3_, ingredient0_.name as name2_3_ from ingredient ingredient0_
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [1]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([name2_3_] : [VARCHAR]) - [cabbage]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [2]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([name2_3_] : [VARCHAR]) - [potato]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [3]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([name2_3_] : [VARCHAR]) - [tomatoes]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([id1_3_] : [BIGINT]) - [4]
2016-07-10 15:30:18 TRACE BasicExtractor:61 - extracted value ([name2_3_] : [VARCHAR]) - [garlic]
2016-07-10 15:51:09 ERROR SqlExceptionHelper:131 - ERROR: relation "stock" does not exist
  Position: 21
2016-07-10 16:19:38 ERROR SqlExceptionHelper:131 - ERROR: duplicate key value violates unique constraint "ingredient_to_stock_pkey"
  Detail: Key (stock_id)=(1) already exists.
2016-07-10 16:19:38 ERROR SessionImpl:3166 - HHH000346: Error during managed flush [could not execute statement]
2016-07-10 21:25:34 ERROR SqlExceptionHelper:131 - ERROR: update or delete on table "ingredient" violates foreign key constraint "dish_to_order_ingredient_id" on table "ingredient_to_stock"
  Detail: Key (id)=(1) is still referenced from table "ingredient_to_stock".
